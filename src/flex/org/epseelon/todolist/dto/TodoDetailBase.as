/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (TodoDetail.as).
 */

package org.epseelon.todolist.dto {

import flash.events.EventDispatcher;
import flash.utils.IDataInput;
import flash.utils.IDataOutput;

import mx.events.PropertyChangeEvent;

import org.epseelon.todolist.enums.Priority;
import org.granite.util.Enum;

[Bindable]
[Event(name="propertyChange",type="mx.events.PropertyChangeEvent")]
public class TodoDetailBase extends EventDispatcher {

    private var _description:String;
    private var _id:Number;
    private var _priority:String;
    private var _title:String;

    public function TodoDetailBase() {

    }


    public function set description(value:String):void {
        if (_description != value) {
            var oldValue:String = _description;
            _description = value;
            dispatchEvent(PropertyChangeEvent.createUpdateEvent(this, "description", oldValue, value));
        }
    }

    public function get description():String {
        return _description;
    }

    public function set id(value:Number):void {
        if (_id != value) {
            var oldValue:Number = _id;
            _id = value;
            dispatchEvent(PropertyChangeEvent.createUpdateEvent(this, "id", oldValue, value));
        }
    }

    public function get id():Number {
        return _id;
    }

    public function set priority(value:String):void {
        if (_priority != value) {
            var oldValue:String = _priority;
            _priority = value;
            dispatchEvent(PropertyChangeEvent.createUpdateEvent(this, "priority", oldValue, value));
        }
    }

    public function get priority():String {
        return _priority;
    }

    public function set title(value:String):void {
        if (_title != value) {
            var oldValue:String = _title;
            _title = value;
            dispatchEvent(PropertyChangeEvent.createUpdateEvent(this, "title", oldValue, value));
        }
    }

    public function get title():String {
        return _title;
    }

    override public function addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void {
        super.addEventListener(type, listener, useCapture, priority, useWeakReference);

    }


    public function readExternal(input:IDataInput):void {
        _description = input.readObject() as String;
        _id = function(o:*):Number {
            return (o is Number ? o as Number : Number.NaN);
        }(input.readObject());
        _priority = input.readObject() as String;
        _title = input.readObject() as String;
    }

    public function writeExternal(output:IDataOutput):void {
        output.writeObject(_description);
        output.writeObject(_id);
        output.writeObject(_priority);
        output.writeObject(_title);
    }
}
}